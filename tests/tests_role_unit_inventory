#!/usr/bin/env bash_unit

[ -z "${RU_ENV_IMAGE}" ] && export RU_ENV_IMAGE=debian11
export RU_ENV_NAME=$(date +%s)
export RU_FIXED_NAMES=1
export RU_COUNT=3

. lib/role_unit

test_i_can_get_machines_with_fixed_names() {
  assert_equals "${ru_env_name}_0" "$(ru_server_name 0)"
  assert_equals "${ru_env_name}_1" "$(ru_server_name 1)"
}

test_i_can_create_groups() {
  local expected_initial_group=$(cat <<EOF
$(ru_server_name 0)
$(ru_server_name 1)
$(ru_server_name 2)
EOF
)
  local expected_initial_inventory=$(cat <<EOF
[${RU_ENV_NAME}]
$(ru_server_name 0)
$(ru_server_name 1)
$(ru_server_name 2)
EOF
)
  local expected_modified_inventory=$(cat <<EOF
[server]
$(ru_server_name 0)
[clients]
$(ru_server_name 1)
$(ru_server_name 2)
EOF
)
  assert_equals "${RU_ENV_NAME}" "$(ru_groups)"
  assert_equals "${expected_initial_group}" "$(ru_group_servers ${RU_ENV_NAME})"
  assert_equals "${expected_initial_inventory}" "$(cat ${ru_ansible_inventory})"
  ru_group server 0
  ru_group clients 1 2
  assert_fails "grep '\[${RU_ENV_NAME}\]' ${ru_ansible_inventory}"
  assert_equals "${expected_modified_inventory}" "$(cat ${ru_ansible_inventory})"
}

setup_suite() {
  ru_init
}

# vim: syntax=sh
